namespace Subdominator.Models;

/// <summary>
/// Represents a vulnerability record in the database
/// </summary>
public class VulnerabilityRecord
{
    public int Id { get; set; }
    public string Domain { get; set; } = string.Empty;
    public string Service { get; set; } = string.Empty;
    public string RiskLevel { get; set; } = string.Empty;
    public string RecordType { get; set; } = string.Empty;
    public string MatchLocation { get; set; } = string.Empty;
    public string CNames { get; set; } = string.Empty;
    public string ARecords { get; set; } = string.Empty;
    public string AAAARecords { get; set; } = string.Empty;
    public bool IsVerified { get; set; }
    public string ScanDate { get; set; } = string.Empty;
    public string ScanId { get; set; } = string.Empty;
    public bool IsFixed { get; set; }
    public string? FixDate { get; set; }
    public string? Notes { get; set; }

    /// <summary>
    /// Create a VulnerabilityRecord from a TakeoverResult
    /// </summary>
    public static VulnerabilityRecord FromTakeoverResult(TakeoverResult result, string domain, string scanId)
    {
        return new VulnerabilityRecord
        {
            Domain = domain,
            Service = result.Fingerprint?.Service ?? "Unknown",
            RiskLevel = Program.DetermineRiskLevel(result),
            RecordType = result.MatchedRecord.ToString(),
            MatchLocation = result.MatchedLocation.ToString(),
            CNames = string.Join(", ", result.CNAMES ?? new List<string>()),
            ARecords = string.Join(", ", result.A ?? new List<string>()),
            AAAARecords = string.Join(", ", result.AAAA ?? new List<string>()),
            IsVerified = result.IsVerified,
            ScanDate = DateTime.UtcNow.ToString("o"),
            ScanId = scanId
        };
    }
}
